variable == "db_list_gp"|
variable == "db_platform"|
variable == "date_searches"|
variable == "grey_list"|
variable == "grey_search"|
variable == "grey_url"|
variable == "forward_method"|
variable == "refman_software"|
variable == "deduplicate"|
variable == "num_records")
#Report variables for IS mention
report_mention <- mention_impact %>% filter(variable == "strategy_all"|
variable == "db_list_gp"|
variable == "db_platform"|
variable == "date_searches"|
variable == "grey_list"|
variable == "grey_search"|
variable == "grey_url"|
variable == "forward_method"|
variable == "refman_software"|
variable == "deduplicate"|
variable == "num_records")
#Report variables for no IS
#Report variables for IS coauthor
report_nois <- none_impact %>% filter(variable == "strategy_all"|
variable == "db_list_gp"|
variable == "db_platform"|
variable == "date_searches"|
variable == "grey_list"|
variable == "grey_search"|
variable == "grey_url"|
variable == "forward_method"|
variable == "refman_software"|
variable == "deduplicate"|
variable == "num_records")
report_is_table1 <- merge(report_nois, report_mention, by = "variable", all = TRUE)
report_is_table <- merge(report_is_table1, report_coauth, by = "variable", all = TRUE)
#Recode variable names for table
report_is_table_rename <- report_is_table %>%
mutate(variable = case_when(
variable == "date_searches" ~ "Search dates reported",
variable == "db_list_gp" ~ "All databases and sub-databases listed",
variable == "db_platform" ~ "Database platform reported",
variable == "deduplicate" ~ "Deduplication method reported",
variable == "forward_method" ~ "Method for forward citation searching described",
variable == "grey_list" ~ "Grey lit sources listed",
variable == "grey_search" ~ "Grey lit search reported",
variable == "grey_url" ~ "Grey lit URLs reported",
variable == "refman_software" ~ "Reference management software reported",
variable == "strategy_all" ~ "All search strategies reported",
variable == "num_records" ~ "Number of records per database reported"
))
report_custom_order <- c("All search strategies reported","All databases and sub-databases listed","Database platform reported",
"Search dates reported", "Grey lit sources listed", "Grey lit search reported",
"Grey lit URLs reported", "Method for forward citation searching described",
"Reference management software reported", "Deduplication method reported",
"Number of records per database reported")
report_is_table_rename <- report_is_table_rename %>%
mutate(variable = factor(variable, levels = report_custom_order)) %>%
arrange(variable)
write_csv(report_is_table_rename, here("./data_outputs/ccmethods_isinvolve_report_table2.csv"))
is_table_df <- read.csv(here("./data_outputs/ccmethods_isinvolve_conduct_table.csv"))
is_table <- is_table_df %>% gt()
gt_tbl_conduct <-
gt(is_table_df) |>
tab_header(
title = "",
subtitle = "Conduct of searches"
) |>
tab_spanner(
label = "No IS Involvement (n=29)",
columns = c(count.x, percentage.x)
) |>
tab_spanner(
label = "IS consulted (n=33)",
columns = c(count.y, percentage.y)
) |>
tab_spanner(
label = "IS co-author (n=24)",
columns = c(count, percentage)
) |>
tab_options(
heading.subtitle.font.size = 16
) %>%
cols_label(variable="", count.x = "No.", percentage.x="%", count.y = "No.", percentage.y="%", count = "No.", percentage="%")
gt_tbl_conduct
#Save to image file
gt_tbl_conduct |> gtsave(here("./plots/conduct_is_table.png"), expand = 10)
#Save to image file
gt_tbl_conduct |> gtsave(here("./plots/conduct_is_table.png"), expand = 10)
is_table_df_report <- read.csv(here("./data_outputs/ccmethods_isinvolve_report_table.csv"))
is_table_report <- is_table_df_report %>% gt()
gt_tbl_report <-
gt(is_table_df_report) |>
tab_header(
title = "",
subtitle = "Reporting of searches"
) |>
tab_spanner(
label = "No IS Involvement (n=29)",
columns = c(count.x, percentage.x)
) |>
tab_spanner(
label = "IS consulted (n=33)",
columns = c(count.y, percentage.y)
) |>
tab_spanner(
label = "IS co-author (n=24)",
columns = c(count, percentage)
) |>
tab_options(
heading.subtitle.font.size = 16
) %>%
cols_label(variable="", count.x = "No.", percentage.x="%", count.y = "No.", percentage.y="%", count = "No.", percentage="%")
gt_tbl_report
#Save to image file
gt_tbl_report |> gtsave(here("./plots/report_is_table.png"), expand = 10)
##Figure 7B. Line graph for IS impact on reporting variables----
#Subset only percentage columns from conduct_is_table
report_is_chart_df <- report_is_table[, c(1,3, 5, 7)]
report_is_chart_long <- report_is_chart_df %>%
pivot_longer(cols = c(percentage.x, percentage.y, percentage),
names_to = "group",
values_to = "percentage")
report_is_chart_long <- report_is_chart_long %>%
mutate(group = case_when(
group == "percentage.x" ~ "No IS",
group == "percentage.y" ~ "IS consulted",
group == "percentage" ~ "IS co-author"))
report_is_chart_long <- report_is_chart_long %>%
mutate(group = factor(group, levels = c("No IS", "IS consulted", "IS co-author")))
report_is_chart_renamed <- report_is_chart_long %>%
mutate(variable = case_when(
variable == "date_searches" ~ "Search dates",
variable == "db_list_gp" ~ "Database names",
variable == "db_platform" ~ "Database platform",
variable == "deduplicate" ~ "Dedup method",
variable == "forward_method" ~ "Forward citation method",
variable == "grey_list" ~ "Grey lit sources",
variable == "grey_search" ~ "Grey lit search",
variable == "grey_url" ~ "Grey lit URLs",
variable == "refman_software" ~ "Ref mgmt software",
variable == "strategy_all" ~ "All search strategies",
variable == "num_records" ~ "Number of database results"
))
custom_order_isrp <- c("Grey lit sources", "Search dates", "Forward citation method", "Database names", "Database platform", "Ref mgmt software", "All search strategies", "Grey lit search", "Number of database results", "Grey lit URLs", "Dedup method")
report_is_chart_renamed$variable <- factor(report_is_chart_renamed$variable, levels = custom_order_isrp)
my_palette_11 <- c25 <- c(
"#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black", "gold1", "deeppink1", "blue1",
"darkturquoise", "green1", "brown"
)
pt_report_is <- ggplot(report_is_chart_renamed, aes(x = group, y = percentage, color = variable, group = variable)) +
geom_line() +
geom_point() +
guides(fill = guide_legend(title = NULL)) +
labs(title = "",
x = "",
y = "Percent of reviews",
color = "Variable") +
theme_minimal() +
theme(legend.title=element_blank()) +
scale_color_manual(values = my_palette_14) #+
#theme(text = element_text(size=13))
pt_report_is
ggsave(here("./plots/fig7b.png"), plot = pt_report_is, width = 6, height = 4, units = "in", dpi = 300)
#Import data
ccmethods_data <- read.csv(here("./data/CC-methods-data-extraction-final-20240508-clean-recode.csv"), na = "NA")
ccmethods_data$pub_date <- make_date(ccmethods_data$pub_year, ccmethods_data$pub_mo)
ccmethods_data$search_date <- make_date(ccmethods_data$search_year, ccmethods_data$search_mo)
ccmethods_data$search_lag <- difftime(ccmethods_data$pub_date, ccmethods_data$search_date, units = "days") %>%
as.numeric() / 30.44
#round to integer
ccmethods_data$search_lag <- round(ccmethods_data$search_lag)
pt_hist_timelag <- ggplot(ccmethods_data, aes(x = search_lag)) +
geom_histogram(color="black", fill="lightgray", binwidth = 3) + theme_light() +
labs(x = str_wrap("Number of months between search date and publication date", width=50), y="Number of reviews") +
scale_y_continuous(breaks = seq(from = 0, to = 12, by = 2), limits = c(0, 12)) +
scale_x_continuous(breaks = seq(from = 0, to = 100, by = 25), limits = c(0, 100)) #+
#theme(text = element_text(size=15))
pt_hist_timelag
pt_hist_timelag <- ggplot(ccmethods_data, aes(x = search_lag)) +
geom_histogram(color="black", fill="lightgray", binwidth = 3) + theme_light() +
labs(x = str_wrap("Number of months between search date and publication date", width=50), y="Number of reviews") +
scale_y_continuous(breaks = seq(from = 0, to = 15, by = 2), limits = c(0, 15)) +
scale_x_continuous(breaks = seq(from = 0, to = 100, by = 25), limits = c(0, 100)) #+
#theme(text = element_text(size=15))
pt_hist_timelag
ggsave(here("./plots/fig8a.png"), plot = pt_hist_timelag, width = 6, height = 4, units = "in", dpi = 300)
#Separate rows by coordinating group
mydata_sep_lag <- separate_rows(ccmethods_data, cg, sep=";")
mydata_sep_lag <- mydata_sep_lag %>% subset(cg != "Nutrition") %>%
subset(cg != "Methods") %>% subset(cg != "Knowledge Translation and Implementation")
pt_box_timelag <- ggplot(mydata_sep_lag, aes(x = cg, y = search_lag)) +
geom_boxplot() +
geom_text(data = mydata_sep_lag %>%
group_by(cg) %>%
filter(search_lag < quantile(search_lag, 0.25) - 1.5*IQR(search_lag) | search_lag > quantile(search_lag, 0.75) + 1.5*IQR(search_lag)),
aes(x = cg, y = search_lag, label = round(search_lag, 2)),
hjust = 1.5, vjust = 0.5, size = 4) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 10)) +
labs(x="Coordinating Group", y=("Number of months"))
pt_box_timelag
prop.table(table(ccmethods_data$refman_software)) * 100
table(ccmethods_data$refman_software, useNA = "always")
just_ref_software <- ccmethods_data %>% subset(refman_software == "yes") %>%
select(refman_software_text)
write.csv(just_ref_software, here("./data_outputs/refman_software.csv"))
write.csv(just_ref_software, here("./data_outputs/refman_software.csv"))
ref_tools <- read.csv(here("./data_outputs/refman_software_clean.csv"))
nrow(ref_tools)
ref_tools %>%
group_by(tool) %>%
summarize(count = n())
prop.table(table(ccmethods_data$deduplicate)) * 100
table(ccmethods_data$deduplicate, useNA = "always")
table(ccmethods_data$update_search)
prop.table(table(ccmethods_data$update_search)) * 100
##In text results----
#Get median, mean, min and max of time lag
summary(ccmethods_data$search_lag)
View(ccmethods_data)
ccmethods_data$search_lag
View(ccmethods_data)
#Import data
ccmethods_data <- read.csv(here("./data/CC-methods-data-extraction-final-20240508-clean-recode.csv"), na = "NA")
ccmethods_data$pub_date <- make_date(ccmethods_data$pub_year, ccmethods_data$pub_mo)
ccmethods_data$search_date <- make_date(ccmethods_data$search_year, ccmethods_data$search_mo)
ccmethods_data$search_lag <- difftime(ccmethods_data$pub_date, ccmethods_data$search_date, units = "days") %>%
as.numeric() / 30.44
#round to integer
ccmethods_data$search_lag <- round(ccmethods_data$search_lag)
pt_hist_timelag <- ggplot(ccmethods_data, aes(x = search_lag)) +
geom_histogram(color="black", fill="lightgray", binwidth = 3) + theme_light() +
labs(x = str_wrap("Number of months between search date and publication date", width=50), y="Number of reviews") +
scale_y_continuous(breaks = seq(from = 0, to = 15, by = 2), limits = c(0, 15)) +
scale_x_continuous(breaks = seq(from = 0, to = 100, by = 25), limits = c(0, 100)) #+
#theme(text = element_text(size=15))
pt_hist_timelag
ggsave(here("./plots/fig8a.png"), plot = pt_hist_timelag, width = 6, height = 4, units = "in", dpi = 300)
#Separate rows by coordinating group
mydata_sep_lag <- separate_rows(ccmethods_data, cg, sep=";")
mydata_sep_lag <- mydata_sep_lag %>% subset(cg != "Nutrition") %>%
subset(cg != "Methods") %>% subset(cg != "Knowledge Translation and Implementation")
##In text results----
#Get median, mean, min and max of time lag
summary(ccmethods_data$search_lag)
twodb_num_yes <- ccmethods_data %>%
summarize(twodb_num_yes = sum(two_db == 'yes', na.rm = TRUE)) %>%
pull(twodb_num_yes)
twodb_perc_yes <- ccmethods_data %>%
summarize(twodb_perc_yes = mean(two_db == 'yes', na.rm = TRUE) * 100) %>%
pull(twodb_perc_yes) |> round(digits=1)
stratone_num_yes <- ccmethods_data %>%
summarize(stratone_num_yes = sum(strategy_one == 'yes', na.rm = TRUE)) %>%
pull(stratone_num_yes)
stratone_perc_yes <- ccmethods_data %>%
summarize(stratone_perc_yes = mean(strategy_one == 'yes', na.rm = TRUE) * 100) %>%
pull(stratone_perc_yes) |> round(digits=1)
#Justified restrictions
#Create new justification column where NA is yes (for use below)
ccmethods_data$limit_just_amstar <- ifelse(is.na(ccmethods_data$limit_just), "yes", ccmethods_data$limit_just)
limjust_num_yes <- ccmethods_data %>%
summarize(limjust_num_yes = sum(limit_just_amstar == 'yes', na.rm = TRUE)) %>%
pull(limjust_num_yes)
limjust_perc_yes <- ccmethods_data %>%
summarize(limjust_perc_yes = mean(limit_just_amstar == 'yes', na.rm = TRUE) * 100) %>%
pull(limjust_perc_yes) |> round(digits=1)
bw_num_yes <- ccmethods_data %>%
summarize(bw_num_yes = sum(backward == 'yes', na.rm = TRUE)) %>%
pull(bw_num_yes)
bw_perc_yes <- ccmethods_data %>%
summarize(bw_perc_yes = mean(backward == 'yes', na.rm = TRUE) * 100) %>%
pull(bw_perc_yes) |> round(digits=1)
trreg_yes <- sum(ccmethods_data$trials == "yes" | ccmethods_data$registries == "yes")
trreg_percent <- trreg_yes/nrow(ccmethods_data)*100 |> round(digits=2)
ccmethods_data$trial_reg <- ifelse(ccmethods_data$trials == "yes" | ccmethods_data$registries == "yes", "yes",
ifelse(ccmethods_data$trials != "yes" & ccmethods_data$registries != "yes", "no", "unclear"))
exp_num_yes <- ccmethods_data %>%
summarize(exp_num_yes = sum(experts == 'yes', na.rm = TRUE)) %>%
pull(exp_num_yes)
exp_perc_yes <- ccmethods_data %>%
summarize(exp_perc_yes = mean(experts == 'yes', na.rm = TRUE) * 100) %>%
pull(exp_perc_yes) |> round(digits=1)
grey_yes <- sum(ccmethods_data$conf_proc == "yes" | ccmethods_data$theses == "yes" | ccmethods_data$govt == "yes" | ccmethods_data$ngo == "yes")
grey_percent <- grey_yes/nrow(ccmethods_data)*100 |> round(digits=1)
ccmethods_data$all_grey <- ifelse(ccmethods_data$conf_proc == "yes" | ccmethods_data$theses == "yes" | ccmethods_data$govt == "yes" | ccmethods_data$ngo == "yes", "yes",
ifelse(ccmethods_data$conf_proc != "yes" & ccmethods_data$theses != "yes" & ccmethods_data$govt != "yes" & ccmethods_data$ngo != "yes", "no", "unclear"))
ccmethods_data$pub_date <- make_date(ccmethods_data$pub_year, ccmethods_data$pub_mo)
ccmethods_data$search_date <- make_date(ccmethods_data$search_year, ccmethods_data$search_mo)
ccmethods_data$search_lag <- difftime(ccmethods_data$pub_date, ccmethods_data$search_date, units = "days") %>%
as.numeric() / 30.44
#round to integer
ccmethods_data$search_lag <- round(ccmethods_data$search_lag)
lag_24 <- sum(ccmethods_data$search_lag <= 24)
lag_24_percent <- lag_24/nrow(ccmethods_data)*100 |> round(digits=1)
ccmethods_data$amstar_partial_yes <- ifelse(ccmethods_data$two_db == "yes" & ccmethods_data$strategy_one == "yes" & ccmethods_data$limit_just_amstar == "yes", "yes", "no")
partial_yes <- sum(ccmethods_data$amstar_partial_yes == "yes")
partial_yes_only <- partial_yes - full_yes
partial_yes_perc <- ((partial_yes_only/nrow(ccmethods_data)) * 100) |> round(digits=1)
ccmethods_data$amstar_full_yes <- ifelse(ccmethods_data$amstar_partial_yes == "yes" & ccmethods_data$backward == "yes" & ccmethods_data$experts == "yes" & ccmethods_data$all_grey == "yes" & ccmethods_data$search_lag <= 24, "yes", "no")
full_yes <- sum(ccmethods_data$amstar_full_yes == "yes")
full_yes_perc <- ((full_yes/nrow(ccmethods_data)) * 100) |> round(digits=1)
no_amst_num <- nrow(ccmethods_data) - partial_yes
no_amst_perc <- ((no_amst_num/nrow(ccmethods_data)) * 100) |> round(digits=1)
number <- c(twodb_num_yes, stratone_num_yes, limjust_num_yes, bw_num_yes, trreg_yes, exp_num_yes, grey_yes, lag_24, full_yes, partial_yes_only, no_amst_num)
percent <- c(twodb_perc_yes, stratone_perc_yes, limjust_perc_yes, bw_perc_yes, trreg_percent, exp_perc_yes, grey_percent, lag_24_percent, full_yes_perc, partial_yes_perc, no_amst_perc)
criteria <- c("Searched at least 2 databases", "Provided search strategy", "Justified publication restrictions", "Searched the reference lists of included studies", "Searched trial/study registries", "Included/consulted content experts", "Searched for grey literature", "Conducted search within 24 months", "Yes", "Partial Yes", "No")
is_table_amstar <- data.frame(criteria = criteria, number = number, percent = percent)
is_table_amstar$percent <- round(is_table_amstar$percent, 1)
#Prepare dataframe as table for gt
is_table <- is_table_amstar %>% gt()
gt_tbl_amstar <-
gt(is_table_amstar) |>
tab_spanner(
label = "Meets AMSTAR 2 criteria",
columns = c(number, percent)
) |>
tab_style(
style = list(
cell_fill(color = "lightcyan"),
cell_text(weight = "bold")
),
locations = cells_body(
rows = criteria == "Yes"
)
) |>
tab_style(
style = list(
cell_fill(color = "lightcyan"),
cell_text(weight = "bold")
),
locations = cells_body(
rows = criteria == "No"
)
) |>
tab_style(
style = list(
cell_fill(color = "lightcyan"),
cell_text(weight = "bold")
),
locations = cells_body(
rows = criteria == "Partial Yes"
)
) |>
cols_align(
align = "center",
columns = number
) |>
cols_align(
align = "center",
columns = percent
) |>
tab_options(
heading.subtitle.font.size = 16
) %>%
cols_label(criteria="", number = "Number of reviews", percent ="Percent of reviews (%)")
gt_tbl_amstar
#Save to image file (note: may need to restart RStudio to get this to work)
gt_tbl_amstar |> gtsave(here("./plots/amstar_table.png"), expand = 10)
#Save to image file (note: may need to restart RStudio to get this to work)
gt_tbl_amstar |> gtsave(here("./plots/amstar_table.png"), expand = 10)
#Save to image file (note: may need to restart RStudio to get this to work)
gt_tbl_amstar |> gtsave(here("./plots/amstar_table.png"), expand = 10)
library(tidyverse)
library(ggplot2)
library(gt)
library(lubridate)
library(here)
#Import data
ccmethods_data <- read.csv(here("./data/CC-methods-data-extraction-final-20240508-clean-recode.csv"), na = "NA")
ccmethods_data$pub_date <- make_date(ccmethods_data$pub_year, ccmethods_data$pub_mo)
ccmethods_data$search_date <- make_date(ccmethods_data$search_year, ccmethods_data$search_mo)
ccmethods_data$search_lag <- difftime(ccmethods_data$pub_date, ccmethods_data$search_date, units = "days") %>%
as.numeric() / 30.44
#round to integer
ccmethods_data$search_lag <- round(ccmethods_data$search_lag)
#Justified restrictions
#Create new justification column where NA is yes (for use below)
ccmethods_data$limit_just_amstar <- ifelse(is.na(ccmethods_data$limit_just), "yes", ccmethods_data$limit_just)
twodb_num_yes <- ccmethods_data %>%
summarize(twodb_num_yes = sum(two_db == 'yes', na.rm = TRUE)) %>%
pull(twodb_num_yes)
twodb_perc_yes <- ccmethods_data %>%
summarize(twodb_perc_yes = mean(two_db == 'yes', na.rm = TRUE) * 100) %>%
pull(twodb_perc_yes) |> round(digits=1)
#Provided search strategy
stratone_num_yes <- ccmethods_data %>%
summarize(stratone_num_yes = sum(strategy_one == 'yes', na.rm = TRUE)) %>%
pull(stratone_num_yes)
stratone_perc_yes <- ccmethods_data %>%
summarize(stratone_perc_yes = mean(strategy_one == 'yes', na.rm = TRUE) * 100) %>%
pull(stratone_perc_yes) |> round(digits=1)
#Justified restrictions
#Create new justification column where NA is yes (for use below)
ccmethods_data$limit_just_amstar <- ifelse(is.na(ccmethods_data$limit_just), "yes", ccmethods_data$limit_just)
limjust_num_yes <- ccmethods_data %>%
summarize(limjust_num_yes = sum(limit_just_amstar == 'yes', na.rm = TRUE)) %>%
pull(limjust_num_yes)
limjust_perc_yes <- ccmethods_data %>%
summarize(limjust_perc_yes = mean(limit_just_amstar == 'yes', na.rm = TRUE) * 100) %>%
pull(limjust_perc_yes) |> round(digits=1)
#Conducted backward citation searching
bw_num_yes <- ccmethods_data %>%
summarize(bw_num_yes = sum(backward == 'yes', na.rm = TRUE)) %>%
pull(bw_num_yes)
bw_perc_yes <- ccmethods_data %>%
summarize(bw_perc_yes = mean(backward == 'yes', na.rm = TRUE) * 100) %>%
pull(bw_perc_yes) |> round(digits=1)
#Searched trial and study registries
trreg_yes <- sum(ccmethods_data$trials == "yes" | ccmethods_data$registries == "yes")
trreg_percent <- trreg_yes/nrow(ccmethods_data)*100 |> round(digits=2)
#Create new column combining trials and registries (for use below)
ccmethods_data$trial_reg <- ifelse(ccmethods_data$trials == "yes" | ccmethods_data$registries == "yes", "yes",
ifelse(ccmethods_data$trials != "yes" & ccmethods_data$registries != "yes", "no", "unclear"))
#Consulted experts
exp_num_yes <- ccmethods_data %>%
summarize(exp_num_yes = sum(experts == 'yes', na.rm = TRUE)) %>%
pull(exp_num_yes)
exp_perc_yes <- ccmethods_data %>%
summarize(exp_perc_yes = mean(experts == 'yes', na.rm = TRUE) * 100) %>%
pull(exp_perc_yes) |> round(digits=1)
#Searched grey literature
grey_yes <- sum(ccmethods_data$conf_proc == "yes" | ccmethods_data$theses == "yes" | ccmethods_data$govt == "yes" | ccmethods_data$ngo == "yes")
grey_percent <- grey_yes/nrow(ccmethods_data)*100 |> round(digits=1)
#Create new column combining all grey lit columns (for use below)
ccmethods_data$all_grey <- ifelse(ccmethods_data$conf_proc == "yes" | ccmethods_data$theses == "yes" | ccmethods_data$govt == "yes" | ccmethods_data$ngo == "yes", "yes",
ifelse(ccmethods_data$conf_proc != "yes" & ccmethods_data$theses != "yes" & ccmethods_data$govt != "yes" & ccmethods_data$ngo != "yes", "no", "unclear"))
#Conducted search within 24 months of completion
#Create new columns with proper date formats from year and month
ccmethods_data$pub_date <- make_date(ccmethods_data$pub_year, ccmethods_data$pub_mo)
ccmethods_data$search_date <- make_date(ccmethods_data$search_year, ccmethods_data$search_mo)
#calculate the number of days elapsed between publication date and last search date and convert to month
ccmethods_data$search_lag <- difftime(ccmethods_data$pub_date, ccmethods_data$search_date, units = "days") %>%
as.numeric() / 30.44
#round to integer
ccmethods_data$search_lag <- round(ccmethods_data$search_lag)
#number of reviews where search lag is less than or equal to 24 months
lag_24 <- sum(ccmethods_data$search_lag <= 24)
lag_24_percent <- lag_24/nrow(ccmethods_data)*100 |> round(digits=1)
#Partial Yes adherence: at least 2 databases, provided at least one search strategy, justified restrictions
ccmethods_data$amstar_partial_yes <- ifelse(ccmethods_data$two_db == "yes" & ccmethods_data$strategy_one == "yes" & ccmethods_data$limit_just_amstar == "yes", "yes", "no")
partial_yes <- sum(ccmethods_data$amstar_partial_yes == "yes")
partial_yes_only <- partial_yes - full_yes
partial_yes_perc <- ((partial_yes_only/nrow(ccmethods_data)) * 100) |> round(digits=1)
#Full Yes adherence: all partial plus backward citation searching, searched trials/registries, consulted experts, searched grey literature, conducted search within 24 months
ccmethods_data$amstar_full_yes <- ifelse(ccmethods_data$amstar_partial_yes == "yes" & ccmethods_data$backward == "yes" & ccmethods_data$experts == "yes" & ccmethods_data$all_grey == "yes" & ccmethods_data$search_lag <= 24, "yes", "no")
full_yes <- sum(ccmethods_data$amstar_full_yes == "yes")
full_yes_perc <- ((full_yes/nrow(ccmethods_data)) * 100) |> round(digits=1)
#Calculate number and percent of No ratings (total number of reviews minus number of Partial Yes ratings)
no_amst_num <- nrow(ccmethods_data) - partial_yes
no_amst_perc <- ((no_amst_num/nrow(ccmethods_data)) * 100) |> round(digits=1)
#AMSTAR table
#Create dataframe from values above
number <- c(twodb_num_yes, stratone_num_yes, limjust_num_yes, bw_num_yes, trreg_yes, exp_num_yes, grey_yes, lag_24, full_yes, partial_yes_only, no_amst_num)
percent <- c(twodb_perc_yes, stratone_perc_yes, limjust_perc_yes, bw_perc_yes, trreg_percent, exp_perc_yes, grey_percent, lag_24_percent, full_yes_perc, partial_yes_perc, no_amst_perc)
criteria <- c("Searched at least 2 databases", "Provided search strategy", "Justified publication restrictions", "Searched the reference lists of included studies", "Searched trial/study registries", "Included/consulted content experts", "Searched for grey literature", "Conducted search within 24 months", "Yes", "Partial Yes", "No")
is_table_amstar <- data.frame(criteria = criteria, number = number, percent = percent)
is_table_amstar$percent <- round(is_table_amstar$percent, 1)
#Prepare dataframe as table for gt
is_table <- is_table_amstar %>% gt()
gt_tbl_amstar <-
gt(is_table_amstar) |>
tab_spanner(
label = "Meets AMSTAR 2 criteria",
columns = c(number, percent)
) |>
tab_style(
style = list(
cell_fill(color = "lightcyan"),
cell_text(weight = "bold")
),
locations = cells_body(
rows = criteria == "Yes"
)
) |>
tab_style(
style = list(
cell_fill(color = "lightcyan"),
cell_text(weight = "bold")
),
locations = cells_body(
rows = criteria == "No"
)
) |>
tab_style(
style = list(
cell_fill(color = "lightcyan"),
cell_text(weight = "bold")
),
locations = cells_body(
rows = criteria == "Partial Yes"
)
) |>
cols_align(
align = "center",
columns = number
) |>
cols_align(
align = "center",
columns = percent
) |>
tab_options(
heading.subtitle.font.size = 16
) %>%
cols_label(criteria="", number = "Number of reviews", percent ="Percent of reviews (%)")
gt_tbl_amstar
#Save to image file (note: may need to restart RStudio to get this to work)
gt_tbl_amstar |> gtsave(here("./plots/amstar_table.png"), expand = 10)
