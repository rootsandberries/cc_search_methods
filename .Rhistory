)
pt_conduct_is <- ggplot(conduct_is_chart_renamed, aes(x = group, y = percentage, color = variable, group = variable)) +
geom_line() +
geom_point() +
labs(title = "",
x = "",
y = "Percent",
color = "Variable") +
theme_minimal() +
theme(legend.title=element_blank()) +
scale_color_manual(values = my_palette_14)
ggsave(here("../plots/fig7a.png"), plot = pt_conduct_is, width = 6, height = 4, units = "in", dpi = 300)
my_palette_11 <- c25 <- c(
"#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black", "gold1", "deeppink1", "blue1",
"darkturquoise", "green1", "brown"
)
pt_report_is <- ggplot(report_is_chart_renamed, aes(x = group, y = percentage, color = variable, group = variable)) +
geom_line() +
geom_point() +
guides(fill = guide_legend(title = NULL)) +
labs(title = "",
x = "",
y = "Percent of reviews",
color = "Variable") +
theme_minimal() +
theme(legend.title=element_blank()) +
scale_color_manual(values = my_palette_14)
ggsave(here("../plots/fig7b.png"), plot = pt_report_is, width = 6, height = 4, units = "in", dpi = 300)
custom_order_isrp <- c("Gray lit sources", "Search dates", "Forward citation method", "Database names", "Database platform", "Ref mgmt software", "All search strategies", "Gray lit search", "Number of database results", "Gray lit URLs", "Dedup method")
report_is_chart_renamed$variable <- factor(report_is_chart_renamed$variable, levels = custom_order_isrp)
pt_report_is <- ggplot(report_is_chart_renamed, aes(x = group, y = percentage, color = variable, group = variable)) +
geom_line() +
geom_point() +
guides(fill = guide_legend(title = NULL)) +
labs(title = "",
x = "",
y = "Percent of reviews",
color = "Variable") +
theme_minimal() +
theme(legend.title=element_blank()) +
scale_color_manual(values = my_palette_14) #+
#theme(text = element_text(size=13))
ggsave(here("../plots/fig7b.png"), plot = pt_report_is, width = 6, height = 4, units = "in", dpi = 300)
library(tidyverse)
library(ggplot2)
library(gt)
library(here)
ccmethods_data <- read.csv(here("../data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
ccmethods_data <- read.csv(here("/data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
getwd()
library(here)
getwd()
ccmethods_data <- read.csv(here("../data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
ccmethods_data <- read.csv(here("../data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
setwd('..')
getwd()
ccmethods_data <- read.csv(here("/data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
ccmethods_data <- read.csv("../data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
ccmethods_data <- read.csv("../data/CC-methods-data-extraction-final-20230227-clean-recode.csv")
library(here)
ccmethods_data <- read.csv(here("../data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
ccmethods_data <- read.csv(here("./data/CC-methods-data-extraction-final-20230227-clean-recode.csv"), na = "NA")
ccmethods_data$db_list_gp <- factor(ccmethods_data$db_list) #Convert to factor
levels(ccmethods_data$db_list_gp) #Print levels
levels(ccmethods_data$db_list_gp) <- c("some", "some", "all") #Recode to new values
levels(ccmethods_data$db_list_gp)
ccmethods_data_is <- ccmethods_data %>% mutate(infospec=if_else(infosp_coauthor == "yes" | infosp_involve == "yes", "yes", "no"))
table(ccmethods_data_is$infosp_involve)
table(ccmethods_data_is$infosp_methods)
table(ccmethods_data_is$infosp_roles)
table(ccmethods_data_is$infosp_coauthor)
table(ccmethods_data_is$infosp_ackn)
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_rolesac = case_when(infosp_roles == "yes" | infosp_ackn == "yes" ~ "yes",
infosp_roles == "no" & infosp_ackn == "no" ~ "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_consult = case_when(infosp_roles == "yes" | infosp_ackn == "yes" | infosp_methods == "yes" ~ "yes",
infosp_roles == "no" & infosp_ackn == "no" & infosp_methods == "no" ~ "no"))
db_subset_infosp <- ccmethods_data_is[, c("infosp_methods", "infosp_consult", "infosp_coauthor", "infosp_involve")]
db_subset_infosp$infosp_methods <- factor(db_subset_infosp$infosp_methods, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_rolesac <- factor(db_subset_infosp$infosp_consult, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_coauthor <- factor(db_subset_infosp$infosp_coauthor, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_involve <- factor(db_subset_infosp$infosp_involve, levels=ordered(c("yes", "no")))
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_involve = "No IS Involvement")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
pt_is
View(pt_is)
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_roleac = case_when(infosp_roles == "yes" | infosp_ackn == "yes" | infosp_methods == "yes" ~ "yes",
infosp_roles == "no" & infosp_ackn == "no" & infosp_methods == "no" ~ "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_consult = case_when(infosp_rolesac == "yes" & infosp_coauthor == "no" ~ "yes",
infosp_coauthor == "yes" ~ "no",
infosp_rolesac == "no" & infosp_coauthor == "no" ~ "no"))
names(ccmethods_data_is)
summarise(ccmethods_data_is$cg)
table(ccmethods_data_is$cg)
#Subset the needed variables
db_subset_infosp <- ccmethods_data_is[, c("infosp_consult", "infosp_coauthor", "infosp_involve")]
db_subset_infosp <- ccmethods_data_is[, c("infosp_consult", "infosp_coauthor", "infosp_involve", "cg")]
db_subset_infosp$infosp_consult <- factor(db_subset_infosp$infosp_consult, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_coauthor <- factor(db_subset_infosp$infosp_coauthor, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_involve <- factor(db_subset_infosp$infosp_involve, levels=ordered(c("yes", "no")))
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_involve = "No IS Involvement")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
pt_is
View(pt_is)
table(ccmethods_data_is$infosp_involve)
View(ccmethods_data)
ccmethods_data_is <- ccmethods_data %>% mutate(infospec=if_else(infosp_coauthor == "yes" | infosp_involve == "yes", "yes", "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_roleac = case_when(infosp_roles == "yes" | infosp_ackn == "yes" | infosp_methods == "yes" ~ "yes",
infosp_roles == "no" & infosp_ackn == "no" & infosp_methods == "no" ~ "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_consult = case_when(infosp_rolesac == "yes" & infosp_coauthor == "no" ~ "yes",
infosp_coauthor == "yes" ~ "no",
infosp_rolesac == "no" & infosp_coauthor == "no" ~ "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_consult = case_when(infosp_rolesac == "yes" & infosp_coauthor == "no" ~ "yes",
infosp_rolesac == "yes" & infosp_coauthor == "yes" ~ "no",
infosp_rolesac == "no" & infosp_coauthor == "no" ~ "no",
infosp_rolesac == "no" & infosp_coauthor == "yes" ~ "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_rolesac = case_when(infosp_roles == "yes" | infosp_ackn == "yes" | infosp_methods == "yes" ~ "yes",
infosp_roles == "no" & infosp_ackn == "no" & infosp_methods == "no" ~ "no"))
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_consult = case_when(infosp_rolesac == "yes" & infosp_coauthor == "no" ~ "yes",
infosp_rolesac == "yes" & infosp_coauthor == "yes" ~ "no",
infosp_rolesac == "no" & infosp_coauthor == "no" ~ "no",
infosp_rolesac == "no" & infosp_coauthor == "yes" ~ "no"))
#Subset the needed variables
db_subset_infosp <- ccmethods_data_is[, c("infosp_consult", "infosp_coauthor", "infosp_involve", "cg")]
db_subset_infosp$infosp_consult <- factor(db_subset_infosp$infosp_consult, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_coauthor <- factor(db_subset_infosp$infosp_coauthor, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_involve <- factor(db_subset_infosp$infosp_involve, levels=ordered(c("yes", "no")))
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value)
View(db_long_infosp)
db1_subset$db_platform <- factor(db1_subset$db_platform, levels=ordered(c("all", "some", "none")))
#Create subset of needed variables only
db1_subset <- ccmethods_data[, c("db_list_gp", "db_platform", "date_range", "grey_url", "grey_list")]
db1_subset$db_platform <- factor(db1_subset$db_platform, levels=ordered(c("all", "some", "none")))
db1_subset$date_range <- factor(db1_subset$date_range, levels=ordered(c("all", "some", "none")))
db1_subset$db_list_gp <- factor(db1_subset$db_list_gp, levels=ordered(c("all", "some", "none")))
db1_subset$grey_list <- factor(db1_subset$grey_list, levels=ordered(c("all", "some", "none", NA)))
db1_subset$grey_url <- factor(db1_subset$grey_url, levels=ordered(c("all", "some", "none", NA)))
#Subset the needed variables
db_subset_infosp <- ccmethods_data_is[, c("infosp_consult", "infosp_coauthor", "infosp_involve", "cg")]
db_subset_infosp$infosp_consult <- factor(db_subset_infosp$infosp_consult, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_coauthor <- factor(db_subset_infosp$infosp_coauthor, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_involve <- factor(db_subset_infosp$infosp_involve, levels=ordered(c("yes", "no")))
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_involve = "No IS Involvement")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
pt_is
View(db_subset_infosp)
View(df_counts_infosp)
View(db_subset_infosp)
View(db_long_infosp)
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value, -cg)
View(db_long_infosp)
db_subset_infosp <- db_subset_infosp %>%
mutate(infosp_none = case_when(infosp_involve == "yes" ~ "no",
infosp_involve == "no" ~ "yes"  ))
db_subset_infosp$infosp_consult <- factor(db_subset_infosp$infosp_consult, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_coauthor <- factor(db_subset_infosp$infosp_coauthor, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_none <- factor(db_subset_infosp$infosp_none, levels=ordered(c("yes", "no")))
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value, -cg)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_none = "No IS Involvement")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
pt_is
ccmethods_data_is <- ccmethods_data_is %>%
mutate(infosp_none = case_when(infosp_involve == "yes" ~ "no",
infosp_involve == "no" ~ "yes"  ))
db_subset_infosp <- ccmethods_data_is[, c("infosp_consult", "infosp_coauthor", "infosp_none", "cg")]
db_subset_infosp$infosp_consult <- factor(db_subset_infosp$infosp_consult, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_coauthor <- factor(db_subset_infosp$infosp_coauthor, levels=ordered(c("yes", "no")))
db_subset_infosp$infosp_none <- factor(db_subset_infosp$infosp_none, levels=ordered(c("yes", "no")))
#Transform to long format on variable name
db_long_infosp <- db_subset_infosp %>%
gather(variable_name, value, -cg)
#Group by variable name and count number of yes values
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
# Convert the groups to a factor with the desired order and recode
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_none = "No IS Involvement")
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
View(df_counts_infosp)
View(db_long_infosp)
#Remove second coordinating group name from cg column for cleaner repsentation of the data
db_long_infosp$cg <- sub(";.*", "", db_long_infosp$cg)
View(db_long_infosp)
ggplot(db_long_infosp, aes(x = variable_name, fill = cg)) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Chart of Counts by Variable",
x = "Variable Name",
y = "Count") +
theme_minimal()
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name, cg) %>%
summarise(count = n())
View(df_counts_infosp)
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_none = "No IS Involvement")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip()
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "top")
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom")
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL))
library("colorspace")
pal <- choose_palette()
library(RColorBrewer)
#Plot stacked grouped bar chart
my_palette <- brewer.pal(7, "Set3")
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
library(viridis)
#Plot stacked grouped bar chart
my_palette <- viridis(7)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
#Plot stacked grouped bar chart
my_palette <- brewer.pal(7, "Set3")
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
#Plot stacked grouped bar chart
my_palette <- rainbow(7)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
#Plot stacked grouped bar chart
my_palette <- heat.colors(7)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
palette()
my_palette <- c("#DF536B", "#61D04F", "#2297E6", "#28E2E5", "#CD0BBC", "#F5C710", "gray62")
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
#Plot stacked grouped bar chart
my_palette <- brewer.pal(7, "Set3")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
ggsave(here("../plots/fig6.png"), plot = pt_is, width = 6, height = 4, units = "in", dpi = 300)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 6, height = 4, units = "in", dpi = 300)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name) %>%
summarise(count = n())
View(df_counts_infosp)
#Plot stacked grouped bar chart
my_palette <- brewer.pal(7, "Set3")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 7, height = 4, units = "in", dpi = 300)
df_counts_infosp <- db_long_infosp %>%
filter(value == "yes") %>%
group_by(variable_name, cg) %>%
summarise(count = n())
df_counts_infosp$variable_name_ordered <- recode_factor(df_counts_infosp$variable_name,
infosp_coauthor = "Co-authorship",
infosp_consult = "IS consulted",
infosp_none = "No IS Involvement")
#Plot stacked grouped bar chart
my_palette <- brewer.pal(7, "Set3")
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL)) +
scale_fill_manual(values = my_palette)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 7, height = 4, units = "in", dpi = 300)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL), color = guide_legend(nrow = 3),
size = guide_legend(nrow = 3)) +
scale_fill_manual(values = my_palette)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(color = guide_legend(nrow = 3),
size = guide_legend(nrow = 3)) +
scale_fill_manual(values = my_palette)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(title = NULL),
size = guide_legend(nrow = 3)) +
scale_fill_manual(values = my_palette)
ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=3,byrow=TRUE,title = NULL)) +
scale_fill_manual(values = my_palette)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 5, height = 4, units = "in", dpi = 300)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 6, height = 5, units = "in", dpi = 300)
pt_is <- ggplot(df_counts_infosp, aes(y=count, x=variable_name_ordered, fill=cg)) +
geom_bar(stat="identity") +
labs(x = "", y = "Number of Reviews") +
scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
theme_light() +
theme(axis.text.x = element_text(size = 10)) +
coord_flip() +
theme(legend.position = "bottom") +
guides(fill = guide_legend(nrow=3, byrow=TRUE,title = NULL)) +
scale_fill_manual(values = my_palette)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 6, height = 5, units = "in", dpi = 300)
ggsave(here("./plots/fig6.png"), plot = pt_is, width = 7, height = 5, units = "in", dpi = 300)
